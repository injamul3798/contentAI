name: Django + React CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      POSTGRES_DB: contentAI
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_HOST: localhost

    services:
      db:
        image: postgres:16
        env:
          POSTGRES_DB: contentAI
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install backend dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run backend tests
      working-directory: ./backend
      env:
        POSTGRES_DB: contentAI
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: root
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        SECRET_KEY: testsecret
        GROQ_API_KEY: dummy_key
      run: |
        python manage.py migrate
        python manage.py test

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm install

    - name: Build frontend
      working-directory: ./frontend
      run: npm start
 